{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport 'react-native-gesture-handler';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Map from \"./screens/Map\";\nimport Visit from \"./screens/Visit\";\nimport Match from \"./screens/Match\";\nimport Profile from \"./screens/Profile\";\nimport Bookmark from \"./screens/Bookmark\";\nimport Barcode from \"./screens/Barcode\";\nimport Meeting from \"./screens/Meeting\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar MapsName = \"Map\";\nvar VisitName = \"Visit\";\nvar MatchName = \"Match\";\nvar Tab = createBottomTabNavigator();\nvar Drawer = createDrawerNavigator();\n\nfunction MainContainer() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: homeName,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (rn === MapsName) {\n              iconName = focused ? 'locate' : 'locate-outline';\n            } else if (rn === VisitName) {\n              iconName = focused ? 'today' : 'today-outline';\n            } else if (rn === MatchName) {\n              iconName = focused ? 'people' : 'people-outline';\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'royalblue',\n        inactiveTintColor: 'grey',\n        labelStyle: {\n          paddingBottom: 10,\n          fontSize: 10\n        },\n        style: {\n          padding: 10,\n          height: 70\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: homeName,\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: VisitName,\n        component: Visit\n      }), _jsx(Tab.Screen, {\n        name: MapsName,\n        component: Map\n      }), _jsx(Tab.Screen, {\n        name: MatchName,\n        component: Match\n      })]\n    })\n  });\n}\n\nexport default MainContainer;","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","createDrawerNavigator","HomeScreen","Map","Visit","Match","Profile","Bookmark","Barcode","Meeting","homeName","MapsName","VisitName","MatchName","Tab","Drawer","MainContainer","route","tabBarIcon","focused","color","size","iconName","rn","name","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","fontSize","style","padding","height"],"sources":["C:/Users/priya/trial/navigation/MainContainer.js"],"sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport 'react-native-gesture-handler';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\n// Screens\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport Map from './screens/Map';\r\nimport Visit from './screens/Visit';\r\nimport Match from './screens/Match';\r\nimport Profile from './screens/Profile';\r\nimport Bookmark from './screens/Bookmark';\r\nimport Barcode from './screens/Barcode';\r\nimport Meeting from './screens/Meeting';\r\n//Screen names\r\nconst homeName = \"Home\";\r\nconst MapsName = \"Map\";\r\nconst VisitName = \"Visit\";\r\nconst MatchName = \"Match\";\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Drawer = createDrawerNavigator();\r\nfunction MainContainer() {\r\n  return (\r\n    <NavigationContainer>\r\n\r\n      <Tab.Navigator\r\n        initialRouteName={homeName}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            let rn = route.name;\r\n\r\n            if (rn === homeName) {\r\n              iconName = focused ? 'home' : 'home-outline';\r\n\r\n            } else if (rn === MapsName) {\r\n              iconName = focused ? 'locate' : 'locate-outline';\r\n\r\n            } else if (rn === VisitName) {\r\n              iconName = focused ? 'today' : 'today-outline';\r\n            } else if (rn === MatchName) {\r\n                iconName = focused ? 'people' : 'people-outline';\r\n            }\r\n  \r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'royalblue',\r\n          inactiveTintColor: 'grey',\r\n          labelStyle: { paddingBottom: 10, fontSize: 10 },\r\n          style: { padding: 10, height: 70}\r\n        }}>\r\n\r\n        <Tab.Screen name={homeName} component={HomeScreen} />\r\n        <Tab.Screen name={VisitName} component={Visit} />\r\n        <Tab.Screen name={MapsName} component={Map} />\r\n        <Tab.Screen name={MatchName} component={Match} />\r\n      </Tab.Navigator>\r\n\r\n\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default MainContainer;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AACA,OAAO,8BAAP;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AAGA,OAAOC,UAAP;AACA,OAAOC,GAAP;AACA,OAAOC,KAAP;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;;;AAEA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,QAAQ,GAAG,KAAjB;AACA,IAAMC,SAAS,GAAG,OAAlB;AACA,IAAMC,SAAS,GAAG,OAAlB;AAGA,IAAMC,GAAG,GAAGf,wBAAwB,EAApC;AACA,IAAMgB,MAAM,GAAGd,qBAAqB,EAApC;;AACA,SAASe,aAAT,GAAyB;EACvB,OACE,KAAC,mBAAD;IAAA,UAEE,MAAC,GAAD,CAAK,SAAL;MACE,gBAAgB,EAAEN,QADpB;MAEE,aAAa,EAAE;QAAA,IAAGO,KAAH,QAAGA,KAAH;QAAA,OAAgB;UAC7BC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;YAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;YAAA,IAAXC,IAAW,SAAXA,IAAW;YACxC,IAAIC,QAAJ;YACA,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;YAEA,IAAID,EAAE,KAAKb,QAAX,EAAqB;cACnBY,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;YAED,CAHD,MAGO,IAAII,EAAE,KAAKZ,QAAX,EAAqB;cAC1BW,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,gBAAhC;YAED,CAHM,MAGA,IAAII,EAAE,KAAKX,SAAX,EAAsB;cAC3BU,QAAQ,GAAGH,OAAO,GAAG,OAAH,GAAa,eAA/B;YACD,CAFM,MAEA,IAAII,EAAE,KAAKV,SAAX,EAAsB;cACzBS,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,gBAAhC;YACH;;YAID,OAAO,KAAC,QAAD;cAAU,IAAI,EAAEG,QAAhB;cAA0B,IAAI,EAAED,IAAhC;cAAsC,KAAK,EAAED;YAA7C,EAAP;UACD;QApB4B,CAAhB;MAAA,CAFjB;MAwBE,aAAa,EAAE;QACbK,eAAe,EAAE,WADJ;QAEbC,iBAAiB,EAAE,MAFN;QAGbC,UAAU,EAAE;UAAEC,aAAa,EAAE,EAAjB;UAAqBC,QAAQ,EAAE;QAA/B,CAHC;QAIbC,KAAK,EAAE;UAAEC,OAAO,EAAE,EAAX;UAAeC,MAAM,EAAE;QAAvB;MAJM,CAxBjB;MAAA,WA+BE,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAEtB,QAAlB;QAA4B,SAAS,EAAER;MAAvC,EA/BF,EAgCE,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAEU,SAAlB;QAA6B,SAAS,EAAER;MAAxC,EAhCF,EAiCE,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAEO,QAAlB;QAA4B,SAAS,EAAER;MAAvC,EAjCF,EAkCE,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAEU,SAAlB;QAA6B,SAAS,EAAER;MAAxC,EAlCF;IAAA;EAFF,EADF;AA2CD;;AAED,eAAeW,aAAf"},"metadata":{},"sourceType":"module"}