{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = handleServerRequest;\n\nvar _core = require('@react-navigation/core');\n\nfunction handleServerRequest(Router, pathWithLeadingSlash, query) {\n  var path = pathWithLeadingSlash.slice(1);\n\n  var navigationAction = Router.getActionForPathAndParams(path, query) || _core.NavigationActions.init();\n\n  var navigationState = Router.getStateForAction(navigationAction);\n  var actionSubscribers = new Set();\n  var navigation = null;\n\n  function getCurrentNavigation() {\n    return navigation;\n  }\n\n  navigation = (0, _core.getNavigation)(Router, navigationState, function () {}, actionSubscribers, function () {\n    return {};\n  }, getCurrentNavigation);\n  var activeKey = navigationState.routes[navigationState.index].key;\n  var activeChildNavigation = navigation.getChildNavigation(activeKey);\n  var options = Router.getScreenOptions(activeChildNavigation);\n  var title = options.title || options.headerTitle;\n  return {\n    navigation: navigation,\n    title: title,\n    options: options\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","handleServerRequest","_core","require","Router","pathWithLeadingSlash","query","path","slice","navigationAction","getActionForPathAndParams","NavigationActions","init","navigationState","getStateForAction","actionSubscribers","Set","navigation","getCurrentNavigation","getNavigation","activeKey","routes","index","key","activeChildNavigation","getChildNavigation","options","getScreenOptions","title","headerTitle"],"sources":["C:/Users/priya/trial/node_modules/@react-navigation/web/dist/handleServerRequest.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = handleServerRequest;\n\nvar _core = require('@react-navigation/core');\n\nfunction handleServerRequest(Router, pathWithLeadingSlash, query) {\n  const path = pathWithLeadingSlash.slice(1);\n\n  // Get initial action from the URL\n  const navigationAction = Router.getActionForPathAndParams(path, query) || _core.NavigationActions.init();\n\n  // Get state from reducer\n  const navigationState = Router.getStateForAction(navigationAction);\n\n  const actionSubscribers = new Set();\n\n  // Prepare top-level navigation prop\n  let navigation = null;\n  function getCurrentNavigation() {\n    return navigation;\n  }\n\n  navigation = (0, _core.getNavigation)(Router, navigationState, () => {}, actionSubscribers, () => ({}), getCurrentNavigation);\n\n  // Get title from active screen options\n  const activeKey = navigationState.routes[navigationState.index].key;\n  const activeChildNavigation = navigation.getChildNavigation(activeKey);\n  const options = Router.getScreenOptions(activeChildNavigation);\n  const title = options.title || options.headerTitle;\n\n  return { navigation, title, options };\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,mBAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,wBAAD,CAAnB;;AAEA,SAASF,mBAAT,CAA6BG,MAA7B,EAAqCC,oBAArC,EAA2DC,KAA3D,EAAkE;EAChE,IAAMC,IAAI,GAAGF,oBAAoB,CAACG,KAArB,CAA2B,CAA3B,CAAb;;EAGA,IAAMC,gBAAgB,GAAGL,MAAM,CAACM,yBAAP,CAAiCH,IAAjC,EAAuCD,KAAvC,KAAiDJ,KAAK,CAACS,iBAAN,CAAwBC,IAAxB,EAA1E;;EAGA,IAAMC,eAAe,GAAGT,MAAM,CAACU,iBAAP,CAAyBL,gBAAzB,CAAxB;EAEA,IAAMM,iBAAiB,GAAG,IAAIC,GAAJ,EAA1B;EAGA,IAAIC,UAAU,GAAG,IAAjB;;EACA,SAASC,oBAAT,GAAgC;IAC9B,OAAOD,UAAP;EACD;;EAEDA,UAAU,GAAG,CAAC,GAAGf,KAAK,CAACiB,aAAV,EAAyBf,MAAzB,EAAiCS,eAAjC,EAAkD,YAAM,CAAE,CAA1D,EAA4DE,iBAA5D,EAA+E;IAAA,OAAO,EAAP;EAAA,CAA/E,EAA2FG,oBAA3F,CAAb;EAGA,IAAME,SAAS,GAAGP,eAAe,CAACQ,MAAhB,CAAuBR,eAAe,CAACS,KAAvC,EAA8CC,GAAhE;EACA,IAAMC,qBAAqB,GAAGP,UAAU,CAACQ,kBAAX,CAA8BL,SAA9B,CAA9B;EACA,IAAMM,OAAO,GAAGtB,MAAM,CAACuB,gBAAP,CAAwBH,qBAAxB,CAAhB;EACA,IAAMI,KAAK,GAAGF,OAAO,CAACE,KAAR,IAAiBF,OAAO,CAACG,WAAvC;EAEA,OAAO;IAAEZ,UAAU,EAAVA,UAAF;IAAcW,KAAK,EAALA,KAAd;IAAqBF,OAAO,EAAPA;EAArB,CAAP;AACD"},"metadata":{},"sourceType":"script"}