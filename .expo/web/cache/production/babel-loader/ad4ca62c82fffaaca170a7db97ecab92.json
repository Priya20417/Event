{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"navigation\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{getHeaderTitle,Header,SafeAreaProviderCompat,Screen}from'@react-navigation/elements';import{DrawerActions,useTheme}from'@react-navigation/native';import*as React from'react';import BackHandler from\"react-native-web/dist/exports/BackHandler\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import*as Reanimated from'react-native-reanimated';import{useSafeAreaFrame}from'react-native-safe-area-context';import DrawerPositionContext from\"../utils/DrawerPositionContext\";import DrawerStatusContext from\"../utils/DrawerStatusContext\";import getDrawerStatusFromState from\"../utils/getDrawerStatusFromState\";import DrawerContent from\"./DrawerContent\";import DrawerToggleButton from\"./DrawerToggleButton\";import{GestureHandlerRootView}from\"./GestureHandler\";import{MaybeScreen,MaybeScreenContainer}from\"./ScreenFallback\";var getDefaultDrawerWidth=function getDefaultDrawerWidth(_ref){var height=_ref.height,width=_ref.width;var smallerAxisSize=Math.min(height,width);var isLandscape=width>height;var isTablet=smallerAxisSize>=600;var appBarHeight=Platform.OS==='ios'?isLandscape?32:44:56;var maxWidth=isTablet?320:280;return Math.min(smallerAxisSize-appBarHeight,maxWidth);};var GestureHandlerWrapper=GestureHandlerRootView!==null&&GestureHandlerRootView!==void 0?GestureHandlerRootView:View;function DrawerViewBase(_ref2){var _Reanimated$isConfigu;var state=_ref2.state,navigation=_ref2.navigation,descriptors=_ref2.descriptors,defaultStatus=_ref2.defaultStatus,_ref2$drawerContent=_ref2.drawerContent,drawerContent=_ref2$drawerContent===void 0?function(props){return React.createElement(DrawerContent,props);}:_ref2$drawerContent,_ref2$detachInactiveS=_ref2.detachInactiveScreens,detachInactiveScreens=_ref2$detachInactiveS===void 0?Platform.OS==='web'||Platform.OS==='android'||Platform.OS==='ios':_ref2$detachInactiveS,_ref2$useLegacyImplem=_ref2.useLegacyImplementation,useLegacyImplementation=_ref2$useLegacyImplem===void 0?!((_Reanimated$isConfigu=Reanimated.isConfigured)!==null&&_Reanimated$isConfigu!==void 0&&_Reanimated$isConfigu.call(Reanimated)):_ref2$useLegacyImplem;var Drawer=useLegacyImplementation?require(\"./legacy/Drawer\").default:require(\"./modern/Drawer\").default;var focusedRouteKey=state.routes[state.index].key;var _descriptors$focusedR=descriptors[focusedRouteKey].options,_descriptors$focusedR2=_descriptors$focusedR.drawerHideStatusBarOnOpen,drawerHideStatusBarOnOpen=_descriptors$focusedR2===void 0?false:_descriptors$focusedR2,_descriptors$focusedR3=_descriptors$focusedR.drawerPosition,drawerPosition=_descriptors$focusedR3===void 0?I18nManager.isRTL?'right':'left':_descriptors$focusedR3,_descriptors$focusedR4=_descriptors$focusedR.drawerStatusBarAnimation,drawerStatusBarAnimation=_descriptors$focusedR4===void 0?'slide':_descriptors$focusedR4,drawerStyle=_descriptors$focusedR.drawerStyle,_descriptors$focusedR5=_descriptors$focusedR.drawerType,drawerType=_descriptors$focusedR5===void 0?Platform.select({ios:'slide',default:'front'}):_descriptors$focusedR5,gestureHandlerProps=_descriptors$focusedR.gestureHandlerProps,_descriptors$focusedR6=_descriptors$focusedR.keyboardDismissMode,keyboardDismissMode=_descriptors$focusedR6===void 0?'on-drag':_descriptors$focusedR6,_descriptors$focusedR7=_descriptors$focusedR.overlayColor,overlayColor=_descriptors$focusedR7===void 0?'rgba(0, 0, 0, 0.5)':_descriptors$focusedR7,_descriptors$focusedR8=_descriptors$focusedR.swipeEdgeWidth,swipeEdgeWidth=_descriptors$focusedR8===void 0?32:_descriptors$focusedR8,_descriptors$focusedR9=_descriptors$focusedR.swipeEnabled,swipeEnabled=_descriptors$focusedR9===void 0?Platform.OS!=='web'&&Platform.OS!=='windows'&&Platform.OS!=='macos':_descriptors$focusedR9,_descriptors$focusedR10=_descriptors$focusedR.swipeMinDistance,swipeMinDistance=_descriptors$focusedR10===void 0?60:_descriptors$focusedR10;var _React$useState=React.useState([focusedRouteKey]),_React$useState2=_slicedToArray(_React$useState,2),loaded=_React$useState2[0],setLoaded=_React$useState2[1];if(!loaded.includes(focusedRouteKey)){setLoaded([].concat(_toConsumableArray(loaded),[focusedRouteKey]));}var dimensions=useSafeAreaFrame();var _useTheme=useTheme(),colors=_useTheme.colors;var drawerStatus=getDrawerStatusFromState(state);var handleDrawerOpen=React.useCallback(function(){navigation.dispatch(_objectSpread(_objectSpread({},DrawerActions.openDrawer()),{},{target:state.key}));},[navigation,state.key]);var handleDrawerClose=React.useCallback(function(){navigation.dispatch(_objectSpread(_objectSpread({},DrawerActions.closeDrawer()),{},{target:state.key}));},[navigation,state.key]);React.useEffect(function(){if(drawerStatus===defaultStatus||drawerType==='permanent'){return;}var handleHardwareBack=function handleHardwareBack(){if(!navigation.isFocused()){return false;}if(defaultStatus==='open'){handleDrawerOpen();}else{handleDrawerClose();}return true;};var handleEscape=function handleEscape(e){if(e.key==='Escape'){handleHardwareBack();}};var subscription=BackHandler.addEventListener('hardwareBackPress',handleHardwareBack);if(Platform.OS==='web'){var _document,_document$body,_document$body$addEve;(_document=document)===null||_document===void 0?void 0:(_document$body=_document.body)===null||_document$body===void 0?void 0:(_document$body$addEve=_document$body.addEventListener)===null||_document$body$addEve===void 0?void 0:_document$body$addEve.call(_document$body,'keyup',handleEscape);}return function(){subscription.remove();if(Platform.OS==='web'){var _document2,_document2$body,_document2$body$remov;(_document2=document)===null||_document2===void 0?void 0:(_document2$body=_document2.body)===null||_document2$body===void 0?void 0:(_document2$body$remov=_document2$body.removeEventListener)===null||_document2$body$remov===void 0?void 0:_document2$body$remov.call(_document2$body,'keyup',handleEscape);}};},[defaultStatus,drawerStatus,drawerType,handleDrawerClose,handleDrawerOpen,navigation]);var renderDrawerContent=function renderDrawerContent(){return React.createElement(DrawerPositionContext.Provider,{value:drawerPosition},drawerContent({state:state,navigation:navigation,descriptors:descriptors}));};var renderSceneContent=function renderSceneContent(){return React.createElement(MaybeScreenContainer,{enabled:detachInactiveScreens,hasTwoStates:true,style:styles.content},state.routes.map(function(route,index){var descriptor=descriptors[route.key];var _descriptor$options=descriptor.options,_descriptor$options$l=_descriptor$options.lazy,lazy=_descriptor$options$l===void 0?true:_descriptor$options$l,unmountOnBlur=_descriptor$options.unmountOnBlur;var isFocused=state.index===index;if(unmountOnBlur&&!isFocused){return null;}if(lazy&&!loaded.includes(route.key)&&!isFocused){return null;}var _descriptor$options2=descriptor.options,_descriptor$options2$=_descriptor$options2.header,header=_descriptor$options2$===void 0?function(_ref3){var _options$headerLeft;var layout=_ref3.layout,options=_ref3.options;return React.createElement(Header,_extends({},options,{layout:layout,title:getHeaderTitle(options,route.name),headerLeft:(_options$headerLeft=options.headerLeft)!==null&&_options$headerLeft!==void 0?_options$headerLeft:function(props){return React.createElement(DrawerToggleButton,props);}}));}:_descriptor$options2$,sceneContainerStyle=_descriptor$options2.sceneContainerStyle;return React.createElement(MaybeScreen,{key:route.key,style:[StyleSheet.absoluteFill,{zIndex:isFocused?0:-1}],visible:isFocused,enabled:detachInactiveScreens},React.createElement(Screen,{focused:isFocused,route:descriptor.route,navigation:descriptor.navigation,headerShown:descriptor.options.headerShown,headerTransparent:descriptor.options.headerTransparent,headerStatusBarHeight:descriptor.options.headerStatusBarHeight,header:header({layout:dimensions,route:descriptor.route,navigation:descriptor.navigation,options:descriptor.options}),style:sceneContainerStyle},descriptor.render()));}));};return React.createElement(DrawerStatusContext.Provider,{value:drawerStatus},React.createElement(Drawer,{open:drawerStatus!=='closed',onOpen:handleDrawerOpen,onClose:handleDrawerClose,gestureHandlerProps:gestureHandlerProps,swipeEnabled:swipeEnabled,swipeEdgeWidth:swipeEdgeWidth,swipeVelocityThreshold:500,swipeDistanceThreshold:swipeMinDistance,hideStatusBarOnOpen:drawerHideStatusBarOnOpen,statusBarAnimation:drawerStatusBarAnimation,keyboardDismissMode:keyboardDismissMode,drawerType:drawerType,drawerPosition:drawerPosition,drawerStyle:[{width:getDefaultDrawerWidth(dimensions),backgroundColor:colors.card},drawerType==='permanent'&&(drawerPosition==='left'?{borderRightColor:colors.border,borderRightWidth:StyleSheet.hairlineWidth}:{borderLeftColor:colors.border,borderLeftWidth:StyleSheet.hairlineWidth}),drawerStyle],overlayStyle:{backgroundColor:overlayColor},renderDrawerContent:renderDrawerContent,renderSceneContent:renderSceneContent,dimensions:dimensions}));}export default function DrawerView(_ref4){var navigation=_ref4.navigation,rest=_objectWithoutProperties(_ref4,_excluded);return React.createElement(SafeAreaProviderCompat,null,React.createElement(GestureHandlerWrapper,{style:styles.content},React.createElement(DrawerViewBase,_extends({navigation:navigation},rest))));}var styles=StyleSheet.create({content:{flex:1}});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","Header","SafeAreaProviderCompat","Screen","DrawerActions","useTheme","React","Reanimated","useSafeAreaFrame","DrawerPositionContext","DrawerStatusContext","getDrawerStatusFromState","DrawerContent","DrawerToggleButton","GestureHandlerRootView","MaybeScreen","MaybeScreenContainer","getDefaultDrawerWidth","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","Platform","OS","maxWidth","GestureHandlerWrapper","View","DrawerViewBase","state","navigation","descriptors","defaultStatus","drawerContent","props","detachInactiveScreens","useLegacyImplementation","isConfigured","_Reanimated$isConfigu","Drawer","require","default","focusedRouteKey","routes","index","key","options","drawerHideStatusBarOnOpen","drawerPosition","I18nManager","isRTL","drawerStatusBarAnimation","drawerStyle","drawerType","select","ios","gestureHandlerProps","keyboardDismissMode","overlayColor","swipeEdgeWidth","swipeEnabled","swipeMinDistance","useState","loaded","setLoaded","includes","dimensions","colors","drawerStatus","handleDrawerOpen","useCallback","dispatch","openDrawer","target","handleDrawerClose","closeDrawer","useEffect","handleHardwareBack","isFocused","handleEscape","e","subscription","BackHandler","addEventListener","body","remove","removeEventListener","renderDrawerContent","Provider","value","renderSceneContent","enabled","hasTwoStates","style","styles","content","map","route","descriptor","lazy","unmountOnBlur","header","layout","title","name","headerLeft","sceneContainerStyle","StyleSheet","absoluteFill","zIndex","visible","focused","headerShown","headerTransparent","headerStatusBarHeight","render","open","onOpen","onClose","swipeVelocityThreshold","swipeDistanceThreshold","hideStatusBarOnOpen","statusBarAnimation","backgroundColor","card","borderRightColor","border","borderRightWidth","hairlineWidth","borderLeftColor","borderLeftWidth","overlayStyle","DrawerView","rest","create","flex"],"sources":["DrawerView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  BackHandler,\n  I18nManager,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport * as Reanimated from 'react-native-reanimated';\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type {\n  DrawerContentComponentProps,\n  DrawerDescriptorMap,\n  DrawerHeaderProps,\n  DrawerNavigationConfig,\n  DrawerNavigationHelpers,\n  DrawerNavigationProp,\n  DrawerProps,\n} from '../types';\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\nimport DrawerStatusContext from '../utils/DrawerStatusContext';\nimport getDrawerStatusFromState from '../utils/getDrawerStatusFromState';\nimport DrawerContent from './DrawerContent';\nimport DrawerToggleButton from './DrawerToggleButton';\nimport { GestureHandlerRootView } from './GestureHandler';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = DrawerNavigationConfig & {\n  defaultStatus: DrawerStatus;\n  state: DrawerNavigationState<ParamListBase>;\n  navigation: DrawerNavigationHelpers;\n  descriptors: DrawerDescriptorMap;\n};\n\nconst getDefaultDrawerWidth = ({\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n}) => {\n  /*\n   * Default drawer width is screen width - header height\n   * with a max width of 280 on mobile and 320 on tablet\n   * https://material.io/components/navigation-drawer\n   */\n  const smallerAxisSize = Math.min(height, width);\n  const isLandscape = width > height;\n  const isTablet = smallerAxisSize >= 600;\n  const appBarHeight = Platform.OS === 'ios' ? (isLandscape ? 32 : 44) : 56;\n  const maxWidth = isTablet ? 320 : 280;\n\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\nfunction DrawerViewBase({\n  state,\n  navigation,\n  descriptors,\n  defaultStatus,\n  drawerContent = (props: DrawerContentComponentProps) => (\n    <DrawerContent {...props} />\n  ),\n  detachInactiveScreens = Platform.OS === 'web' ||\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios',\n  // Reanimated 2 is not configured\n  // @ts-expect-error: the type definitions are incomplete\n  useLegacyImplementation = !Reanimated.isConfigured?.(),\n}: Props) {\n  const Drawer: React.ComponentType<DrawerProps> = useLegacyImplementation\n    ? require('./legacy/Drawer').default\n    : require('./modern/Drawer').default;\n\n  const focusedRouteKey = state.routes[state.index].key;\n  const {\n    drawerHideStatusBarOnOpen = false,\n    drawerPosition = I18nManager.isRTL ? 'right' : 'left',\n    drawerStatusBarAnimation = 'slide',\n    drawerStyle,\n    drawerType = Platform.select({ ios: 'slide', default: 'front' }),\n    gestureHandlerProps,\n    keyboardDismissMode = 'on-drag',\n    overlayColor = 'rgba(0, 0, 0, 0.5)',\n    swipeEdgeWidth = 32,\n    swipeEnabled = Platform.OS !== 'web' &&\n      Platform.OS !== 'windows' &&\n      Platform.OS !== 'macos',\n    swipeMinDistance = 60,\n  } = descriptors[focusedRouteKey].options;\n\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const dimensions = useSafeAreaFrame();\n\n  const { colors } = useTheme();\n\n  const drawerStatus = getDrawerStatusFromState(state);\n\n  const handleDrawerOpen = React.useCallback(() => {\n    navigation.dispatch({\n      ...DrawerActions.openDrawer(),\n      target: state.key,\n    });\n  }, [navigation, state.key]);\n\n  const handleDrawerClose = React.useCallback(() => {\n    navigation.dispatch({\n      ...DrawerActions.closeDrawer(),\n      target: state.key,\n    });\n  }, [navigation, state.key]);\n\n  React.useEffect(() => {\n    if (drawerStatus === defaultStatus || drawerType === 'permanent') {\n      return;\n    }\n\n    const handleHardwareBack = () => {\n      // We shouldn't handle the back button if the parent screen isn't focused\n      // This will avoid the drawer overriding event listeners from a focused screen\n      if (!navigation.isFocused()) {\n        return false;\n      }\n\n      if (defaultStatus === 'open') {\n        handleDrawerOpen();\n      } else {\n        handleDrawerClose();\n      }\n\n      return true;\n    };\n\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        handleHardwareBack();\n      }\n    };\n\n    // We only add the listeners when drawer opens\n    // This way we can make sure that the listener is added as late as possible\n    // This will make sure that our handler will run first when back button is pressed\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      handleHardwareBack\n    );\n\n    if (Platform.OS === 'web') {\n      document?.body?.addEventListener?.('keyup', handleEscape);\n    }\n\n    return () => {\n      subscription.remove();\n\n      if (Platform.OS === 'web') {\n        document?.body?.removeEventListener?.('keyup', handleEscape);\n      }\n    };\n  }, [\n    defaultStatus,\n    drawerStatus,\n    drawerType,\n    handleDrawerClose,\n    handleDrawerOpen,\n    navigation,\n  ]);\n\n  const renderDrawerContent = () => {\n    return (\n      <DrawerPositionContext.Provider value={drawerPosition}>\n        {drawerContent({\n          state: state,\n          navigation: navigation,\n          descriptors: descriptors,\n        })}\n      </DrawerPositionContext.Provider>\n    );\n  };\n\n  const renderSceneContent = () => {\n    return (\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates\n        style={styles.content}\n      >\n        {state.routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const { lazy = true, unmountOnBlur } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            // Don't render a lazy screen if we've never navigated to it\n            return null;\n          }\n\n          const {\n            header = ({ layout, options }: DrawerHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n                headerLeft={\n                  options.headerLeft ??\n                  ((props) => <DrawerToggleButton {...props} />)\n                }\n              />\n            ),\n            sceneContainerStyle,\n          } = descriptor.options;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              visible={isFocused}\n              enabled={detachInactiveScreens}\n            >\n              <Screen\n                focused={isFocused}\n                route={descriptor.route}\n                navigation={descriptor.navigation}\n                headerShown={descriptor.options.headerShown}\n                headerTransparent={descriptor.options.headerTransparent}\n                headerStatusBarHeight={descriptor.options.headerStatusBarHeight}\n                header={header({\n                  layout: dimensions,\n                  route: descriptor.route,\n                  navigation:\n                    descriptor.navigation as DrawerNavigationProp<ParamListBase>,\n                  options: descriptor.options,\n                })}\n                style={sceneContainerStyle}\n              >\n                {descriptor.render()}\n              </Screen>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n    );\n  };\n\n  return (\n    <DrawerStatusContext.Provider value={drawerStatus}>\n      <Drawer\n        open={drawerStatus !== 'closed'}\n        onOpen={handleDrawerOpen}\n        onClose={handleDrawerClose}\n        gestureHandlerProps={gestureHandlerProps}\n        swipeEnabled={swipeEnabled}\n        swipeEdgeWidth={swipeEdgeWidth}\n        swipeVelocityThreshold={500}\n        swipeDistanceThreshold={swipeMinDistance}\n        hideStatusBarOnOpen={drawerHideStatusBarOnOpen}\n        statusBarAnimation={drawerStatusBarAnimation}\n        keyboardDismissMode={keyboardDismissMode}\n        drawerType={drawerType}\n        drawerPosition={drawerPosition}\n        drawerStyle={[\n          {\n            width: getDefaultDrawerWidth(dimensions),\n            backgroundColor: colors.card,\n          },\n          drawerType === 'permanent' &&\n            (drawerPosition === 'left'\n              ? {\n                  borderRightColor: colors.border,\n                  borderRightWidth: StyleSheet.hairlineWidth,\n                }\n              : {\n                  borderLeftColor: colors.border,\n                  borderLeftWidth: StyleSheet.hairlineWidth,\n                }),\n          drawerStyle,\n        ]}\n        overlayStyle={{ backgroundColor: overlayColor }}\n        renderDrawerContent={renderDrawerContent}\n        renderSceneContent={renderSceneContent}\n        dimensions={dimensions}\n      />\n    </DrawerStatusContext.Provider>\n  );\n}\n\nexport default function DrawerView({ navigation, ...rest }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <GestureHandlerWrapper style={styles.content}>\n        <DrawerViewBase navigation={navigation} {...rest} />\n      </GestureHandlerWrapper>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}